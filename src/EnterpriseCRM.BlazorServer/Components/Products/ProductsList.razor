@using EnterpriseCRM.Application.DTOs
@using EnterpriseCRM.BlazorServer.Services
@inject IProductClientService ProductService

<h3>Products</h3>

@if (products == null)
{
    <p>Loading products...</p>
}
else if (!products.Any())
{
    <p>No products found</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>SKU</th>
                <th>Price</th>
                <th>Category</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.SKU</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@product.Category</td>
                    <td>
                        @if (product.IsActive)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Inactive</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="() => Edit(product.Id)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => Delete(product.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ProductDto> products = new();

    protected override async Task OnInitializedAsync()
    {
        products = (await ProductService.GetAllAsync()).ToList();
    }

    private void Edit(int id)
    {
        // Navigate to edit page
    }

    private async Task Delete(int id)
    {
        await ProductService.DeleteAsync(id);
        products = (await ProductService.GetAllAsync()).ToList();
        StateHasChanged();
    }
}